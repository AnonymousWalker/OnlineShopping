@model LoginViewModel
@{ ViewBag.Title = "Login";}
@Styles.Render("~/Content/Custom/login.css")

<br />
@Html.Hidden("sign-in-url", Url.Action("SignIn", "Account"))
<div class="login-body-container">
    <h4 class="card-title text-center mb-4 mt-1">Log in</h4>
    <hr>
    <p class="text-danger text-center">@Html.DisplayTextFor(x => x.Message)</p>
    @using (Html.BeginForm("SignIn", "Account", FormMethod.Post))
    {
        <div class="form-group">
            <div class="input-group input-group-center">
                <span class="input-group-addon"> <i class="fa fa-user"></i> </span>
                @Html.TextBoxFor(x => x.Username, new { @class = "form-control", placeholder = "Username" })
            </div> <!-- input-group.// -->
        </div> <!-- form-group// -->
        <div class="form-group">
            <div class="input-group input-group-center">
                <span class="input-group-addon"> <i class="fa fa-lock"></i> </span>
                @Html.TextBoxFor(x => x.Password, new { @class = "form-control", placeholder = "********", type = "password" })
            </div>
        </div>
        <div class="form-group btn-sign-in">
            <button id="sign-in-btn" class="btn btn-primary btn-block">Sign in</button>
        </div>
        <hr>
        <p class="text-center">Don't have an account? <a href="@Url.Action("SignUp","Account")" >Sign up here</a></p>
    }
</div>

@Scripts.Render("~Script/Custom/login.js")
